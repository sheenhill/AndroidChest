//根据isModule标签动态的切换 集成模块/单组件模式

if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    def TEST_STR_1 = "松鼠桂鱼"
    def TEST_STR_2 = "藏书羊肉"

    defaultConfig {
        //作为一个集成模块应该不应该有applicationId
        if (!isModule) {
            applicationId "com.sheenhill.lotterydemo"
        }
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "LOG_TEST", "\"${TEST_STR_1}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        bate1 {
//            buildConfigField "String", "LOG_TEST", "${TEST_STR_1}"
//        }
//        bate2 {
//            buildConfigField "String", "LOG_TEST", "${TEST_STR_2}"
//        }
    }
    sourceSets {
        main() {
            //作为一个集成模块 manifest文件中不加任何东西可以防止冲突
            if (isModule) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
                java.srcDirs 'src/main/module/java', 'src/main/java'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    productFlavors {

    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    dataBinding {
        //noinspection DataBindingWithoutKapt
        enabled = true
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.1.0-rc01'

    def nav_version = "2.3.1"

    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation project(path: ':common')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    def lifecycle_version = "2.2.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'androidx.cardview:cardview:1.0.0'

    // JetPack数据库组件
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    
    // 爬虫
    implementation 'org.jsoup:jsoup:1.13.1'


    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

}
repositories {
    mavenCentral()
}
